一、真机上，还原三台虚拟机环境
[root@room9pc01 ~]# rht-vmctl  reset classroom
[root@room9pc01 ~]# rht-vmctl  reset server
[root@room9pc01 ~]# rht-vmctl  reset desktop

[root@room9pc01 ~]# gos          #远程管理

[root@server0 ~]# yum  clean  all     #清空Yum缓存
[root@server0 ~]# yum  repolist       #显示Yum仓库信息

二、环境的准备，设置防火墙默认区域为trusted（允许所有访问） 
虚拟机Server0
[root@server0 ~]# firewall-cmd --set-default-zone=trusted 

虚拟机Desktop0
[root@desktop0 ~]# firewall-cmd --set-default-zone=trusted


########################################################

Web通信基本概念

• 基于 B/S (Browser/Server)架构的网页服务
– 服务端提供网页
– 浏览器下载并显示网页

########################################################
搭建虚拟Web主机：

 利用基于域名的虚拟Web主机，搭建网站
         利用server0.example.com ------》Web1
         利用www0.example.com --------》Web2
1.环境的准备，设置防火墙默认区域为trusted（允许所有访问） 
2.安装httpd软件，建立调用配置文件
# yum -y install httpd
# mkdir /var/www/nsd
# echo '<h1>Web1' > /var/www/html/index.html
# echo '<h1>Web2' > /var/www/nsd/index.html
[root@server0 ~]# vim /etc/httpd/conf.d/nsd01.conf
<VirtualHost *:80>
  ServerName server0.example.com
  DocumentRoot /var/www/html
</VirtualHost>
<VirtualHost *:80>
  ServerName www0.example.com
  DocumentRoot /var/www/nsd
</VirtualHost>
[root@server0 ~]# systemctl restart httpd

######################################################
安全的Web服务器，使用的协议https 默认端口 443

• Public Key Infrastructure,公钥基础设施
– 公钥:主要用来加密数据
– 私钥:主要用来解密数据(与相应的公钥匹配)
– 数字证书:证明拥有者的合法性/权威性(单位名称、
有效期、公钥、颁发机构及签名、......)
– Certificate Authority,数字证书授权中心:负责证书
的申请/审核/颁发/鉴定/撤销等管理工作



构建安全Web服务器
1.安装支持安全功能的软件
[root@server0 ~]# yum -y install mod_ssl
[root@server0 ~]# ls /etc/httpd/conf.d/ssl.conf

2.部署网站证书（营业执照）
# cd /etc/pki/tls/certs/
# wget http://classroom.example.com/pub/tls/certs/server0.crt

# ls  /etc/pki/tls/certs/

3.部署根证书（公安局信息）
# cd  /etc/pki/tls/certs/
# wget http://classroom.example.com/pub/example-ca.crt

# ls  /etc/pki/tls/certs/

4.部署私钥（用于解密数据）
# cd  /etc/pki/tls/private/
# wget http://classroom.example.com/pub/tls/private/server0.key

# ls 

5.修改配置文件指定证书位置等
[root@server0 /]# vim /etc/httpd/conf.d/ssl.conf 
 vim末行模式   :set  nu 显示行号

 59行  DocumentRoot  "网页存放路径"               #将注释去掉，修改路径
 60行  ServerName  www0.example.com:443  #将注释去掉，修改域名

--指定网站证书位置
100 SSLCertificateFile /etc/pki/tls/certs/server0.crt

--指定私钥匙位置
107 SSLCertificateKeyFile /etc/pki/tls/private/server0.key

--指定根证书位置
122 SSLCACertificateFile /etc/pki/tls/certs/example-ca.crt

6.重起httpd服务
[root@server0 /]# systemctl restart httpd

客户端虚拟机Desktop0验证：
[root@desktop0 ~]# firefox https://www0.example.com
   "我已充分了解可能的风险" ------》"确认安全例外"

#######################################################
基础邮件服务
• 电子邮件服务器的基本功能
– 为用户提供电子邮箱存储空间(用户名@邮件域名)
– 处理用户发出的邮件 —— 传递给收件服务器
– 处理用户收到的邮件 —— 投递到邮箱

    SMTP:用户发邮件协议     默认端口：25
    pop3:用户收邮件协议     默认端口：110

   classroom.example.com:DNS服务器
                                      域名：server0.example.com

    yg@server0.example.com    xln@server0.example.com

#####################################################
构建邮件服务器虚拟机Server0
1.安装软件postfix
[root@server0 /]# yum -y install postfix
[root@server0 /]# rpm -q postfix
2.修改配置文件
[root@server0 /]# vim /etc/postfix/main.cf 
 vim末行模式   ：set  nu    #开启行号

 99行     myorigin = server0.example.com   #默认补全的域名后缀
 116行  inet_interfaces = all     #本机所有网络接口都开放邮件功能
 164行  mydestination = server0.example.com  #判断为本域邮件

3.重起服务
[root@server0 /]# systemctl restart postfix

本机验证：
1.创建测试用户
[root@server0 /]# useradd yg
[root@server0 /]# useradd xln

• mail 发信操作
– mail -s '邮件标题'     -r  发件人       收件人

• mail 收信操作
– mail   [-u 用户名]

[root@server0 /]# mail -s '葵花宝典'   -r    yg   xln
AAAAAAAA
已练成
wehowgh
.            #只输入一个点，代表结束
EOT
[root@server0 /]# mail  -u  xln
Heirloom Mail version 12.5 7/5/10.  Type ? for help.
"/var/mail/xln": 1 message 1 new
>N  1 yg@server0.example.c  Mon Aug 20 14:22  20/614   
&  1       #输入邮件的编号，然后回车

#######################################################         

# echo haha | mail -s 'test02' -r yg  xln

# mail -u xln

####################################################
parted分区工具

    MBR 分区模式 : 4个主分区     容量2T 

    GPT 分区模式 : 128个主分区     容量18EB

            1EB=1000PB
            1PB=1000TB

[root@server0 /]# lsblk 
vdb    253:16   0  10G  0 disk 

[root@server0 ~]# parted /dev/vdb
(parted) mktable  gpt       #指定分区模式
(parted) print              #输出所有分区信息
(parted) mkpart             #创建新的分区
 分区名称？  []? nsd             #分区名称为nsd
文件系统类型？  [ext2]? ext4     #文件系统不起实际作用
 起始点？ 0           
 结束点？ 2G          
 忽略/Ignore/放弃/Cancel? Ignore    #忽略
(parted) unit  GB                 #使用GB作为显示单位
(parted) mkpart 
 分区名称？  []? nsd          
文件系统类型？  [ext2]? ext4 
起始点？ 2G                  
结束点？ 4G                  
(parted) print   
(parted) quit                        


###################################################
 交换空间

什么是交换空间
• 相当于虚拟内存,
– 当物理内存不够用时,使用磁盘空间来模拟内存
– 在一定程度上缓解内存不足的问题
– 交换分区:以空闲分区充当的交换空间

1.格式化交换文件系统
[root@server0 ~]# mkswap /dev/vdb1    #格式化交换文件系统
[root@server0 ~]# blkid /dev/vdb1     #查看文件系统类型
[root@server0 ~]# mkswap /dev/vdb2   
2.启用交换分区
[root@server0 ~]# swapon /dev/vdb1    #启用交换分区
[root@server0 ~]# swapon /dev/vdb2
[root@server0 ~]# swapon  -s          #查看交换空间信息
3.停用交换分区
[root@server0 ~]# swapoff /dev/vdb1 
[root@server0 ~]# swapoff /dev/vdb2
[root@server0 ~]# swapon  -s
4.开机自动启用交换分区
[root@server0 ~]# vim /etc/fstab 

/dev/vdb1  swap  swap defaults  0 0
/dev/vdb2  swap  swap defaults  0 0

[root@server0 ~]# swapoff /dev/vdb1
[root@server0 ~]# swapoff /dev/vdb2
[root@server0 ~]# swapon -s
[root@server0 ~]# swapon -a    #专用于检测swap分区开机自动启动
[root@server0 ~]# swapon -s

#######################################################
配置聚合连接（链路聚合  网卡绑定 ）

备份网卡设备:– 作用:热备份(activebackup)连接冗余

                         eth1     eth2  

                                           虚拟网卡：team0 192.168.1.1


制作链路聚合
1.建立虚拟网卡team0,   参考 # man teamd.conf
# nmcli connection add type team       
  con-name  team0  ifname  team0  autoconnect yes          
  config  '{"runner": {"name": "activebackup"}}'

解析：nmcli connection 添加   类型  为team
         配置文件名为 team0  网卡名为  team0  每次开机自动启用
         链路聚合的工作模式为   热备份

# ifconfig 

如果有敲错，一定要删除
# nmcli connection delete team0   #删除配置

2. 加入成员
[root@server0 ~]# nmcli connection add type team-slave 
con-name team0-1 ifname eth1 master team0

[root@server0 ~]# nmcli connection add type team-slave 
con-name team0-2 ifname eth2 master team0

解析：nmcli connection 添加   类型为  team的成员
          配置文件名  team0-1  网卡为 eth1  主设备为  team0

如果敲错，一定要删除配置
[root@server0 ~]# nmcli connection delete team0-1
[root@server0 ~]# nmcli connection delete team0-2

3.配置IP地址
[root@server0 ~]# nmcli connection modify team0        
   ipv4.method manual ipv4.addresses 192.168.1.1/24     
   connection.autoconnect yes

4.激活
[root@server0 ~]# nmcli connection up team0
[root@server0 ~]# nmcli connection up team0-1
[root@server0 ~]# nmcli connection up team0-2

[root@server0 ~]# teamdctl team0 state  #专业查看team0的命令
[root@server0 ~]# ifconfig eth1 down    #禁用网卡eth1
[root@server0 ~]# teamdctl team0 state

#####################################################
防火墙

永久配置(permanent)

# systemctl restart httpd
# firewall-cmd --set-default-zone=public  #修改默认区域
# firewall-cmd --zone=public --list-all   #查看public区域规则

# firewall-cmd --zone=public --add-service=http  #添加协议

# firewall-cmd --zone=public --list-all   #查看public区域规则

客户端desktop0验证：
# firefox  172.25.0.11

实现永久
# firewall-cmd --reload    #重新加载防火墙所有策略
# firewall-cmd --zone=public --list-all   #查看public区域规则

# firewall-cmd --permanent --zone=public --add-service=http
# firewall-cmd --zone=public --list-all

# firewall-cmd --reload 
# firewall-cmd --zone=public --list-all


端口转发：
   客户端虚拟机desktop0访问 172.25.0.11：5423
   防火墙进行端口转发将5423变成80
   172.25.0.11：80

虚拟机server0:
[root@server0 ~]# firewall-cmd --permanent --zone=public  
  --add-forward-port=port=5423:proto=tcp:toport=80

[root@server0 ~]# firewall-cmd --zone=public --list-all 

[root@server0 ~]# firewall-cmd --reload

[root@server0 ~]# firewall-cmd --zone=public --list-all

必须利用客户端desktop0测试：
[root@desktop0 ~]# firefox 172.25.0.11:5423

######################################################















































