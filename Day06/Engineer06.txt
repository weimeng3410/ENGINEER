一、真机上，还原三台虚拟机环境
[root@room9pc01 ~]# rht-vmctl  reset classroom
[root@room9pc01 ~]# rht-vmctl  reset server
[root@room9pc01 ~]# rht-vmctl  reset desktop

[root@room9pc01 ~]# gos          #远程管理

[root@server0 ~]# yum  clean  all     #清空Yum缓存
[root@server0 ~]# yum  repolist       #显示Yum仓库信息

二、环境的准备，设置防火墙默认区域为trusted（允许所有访问） 
虚拟机Server0
[root@server0 ~]# firewall-cmd --set-default-zone=trusted 

虚拟机Desktop0
[root@desktop0 ~]# firewall-cmd --set-default-zone=trusted


########################################################

Web通信基本概念

• 基于 B/S (Browser/Server)架构的网页服务
– 服务端提供网页
– 浏览器下载并显示网页


• Hyper Text Markup Language(html),超文本标记语言
• Hyper Text Transfer Protocol(http),超文本传输协议 默认端口80

RHEL7中的Web服务
• 软件包:httpd
• 系统服务:httpd


• 提供的默认配置
– Listen:监听地址:端口(80)
– ServerName:本站点注册的DNS名称(空缺)
– DocumentRoot:网页根目录(/var/www/html)
– DirectoryIndex:起始页/首页文件名(index.html)

虚拟机Server0
1.安装软件httpd
2.重起httpd服务
[root@server0 ~]# systemctl restart httpd
[root@server0 ~]# systemctl enable httpd
ln -s '/usr/lib/systemd/system/httpd.service' '/etc/systemd/system/multi-user.target.wants/httpd.service'
[root@server0 ~]# 

3.测试：访问测试页面
[root@server0 ~]# firefox 172.25.0.11

4. 书写一个自己的页面
# echo '<h1>NSD1807 Web01'  >  /var/www/html/index.html 
# cat  /var/www/html/index.html

######################################################
– ServerName:本站点注册的DNS名称(空缺)
   
  DNS服务器：域名解析服务  将域名解析为IP地址
            classroom.example.com

         三个域名： server0.example.com
              www0.example.com
              webapp0.example.com

虚拟机Server0：
1.修改主配置文件
[root@server0 ~]# vim /etc/httpd/conf/httpd.conf
 补充：vim 显示行号   末行模式：set  nu

  95行  ServerName server0.example.com:80   #将开头的#去掉

2.重起httpd服务
[root@server0 ~]# systemctl restart httpd


在虚拟机desktop0，测试访问
[root@desktop0 ~]# firefox server0.example.com

#####################################################

 DocumentRoot:网页文件根目录(/var/www/html)

虚拟机Server0：
1.修改主配置文件
# mkdir /var/www/myweb
# echo '<h1> wo shi myweb' > /var/www/myweb/index.html
# cat /var/www/myweb/index.html

[root@server0 ~]# vim /etc/httpd/conf/httpd.conf
 补充：vim 显示行号   末行模式：set  nu

  119行  DocumentRoot  "/var/www/myweb"   #修改存放网页文件路径

2.重起httpd服务
[root@server0 ~]# systemctl restart httpd

在虚拟机desktop0，测试访问
[root@desktop0 ~]# firefox server0.example.com

######################################################
 网络路径与实际路径区别

客户端： firefox http://server0.example.com

服务端： 
   httpd--》/etc/httpd/conf/httpd.conf--》DocumentRoot


虚拟机Server0：

# mkdir  -p /var/www/myweb/abc/test

# echo '<h1>wo shi abc/test' > /var/www/myweb/abc/test/index.html

虚拟机desktop0，测试访问
[root@desktop0 ~]# firefox server0.example.com/abc/test

######################################################
虚拟Web主机
– 由同一台服务器提供多个不同的Web站点

• 构建/区分方式
– 基于域名的虚拟主机
– 基于端口的虚拟主机
– 基于IP地址的虚拟主机


#####################################################
– 基于域名的虚拟主机

• 为每个虚拟站点添加配置，容器式配置格式
	<VirtualHost IP地址:端口>
	  ServerName 此站点的DNS名称
	  DocumentRoot 此站点的网页根目录
	</VirtualHost>

• 配置文件路径
  – /etc/httpd/conf/httpd.conf
  – /etc/httpd/conf.d/*.conf   （调用配置文件）

####################################################
配置虚拟Web主机
虚拟机server0:
[root@server0 ~]# vim  /etc/httpd/conf.d/nsd01.conf
<VirtualHost *:80>
  ServerName www0.example.com
  DocumentRoot /var/www/qq
</VirtualHost>

<VirtualHost *:80>
  ServerName webapp0.example.com
  DocumentRoot /var/www/baidu
</VirtualHost>

[root@server0 ~]# mkdir  /var/www/qq  /var/www/baidu
[root@server0 ~]# echo '<h1>企鹅' > /var/www/qq/index.html
[root@server0 ~]# echo '<h1>百度' > /var/www/baidu/index.html
[root@server0 ~]# systemctl restart httpd

[root@server0 ~]# killall httpd  #杀死所有httpd程序


一旦使用了虚拟Web主机功能，所有的Web站点都必须用虚拟Web主机来实现
 由上到下匹配
[root@server0 ~]# vim /etc/httpd/conf.d/nsd01.conf
<VirtualHost *:80>
  ServerName www0.example.com
  DocumentRoot /var/www/qq
</VirtualHost>
<VirtualHost *:80>
  ServerName webapp0.example.com
  DocumentRoot /var/www/baidu
</VirtualHost>
<VirtualHost *:80>
  ServerName server0.example.com
  DocumentRoot /var/www/myweb
</VirtualHost>
[root@server0 ~]#  systemctl restart httpd

#######################################################
httpd的访问控制

• 使用 <Directory> 配置区段
– 每个文件夹自动继承其父目录的ACL访问权限
– 除非针对子目录有明确设置


<Directory 目录的绝对路径>
.. ..
  Require all denied|granted
  Require ip IP或网段地址 .. ..
</Directory>

###########################################
在 Web 网站 http://server0.example.com 的
DocumentRoot 目录下创建一个名为 private 的子目录
要求如下:

3)从 server0 上,任何人都可以浏览 private 的内容,
但是从其他系统不能访问这个目录的内容

虚拟机server0：
# mkdir /var/www/myweb/private
# echo '<h1>wo shi private' > /var/www/myweb/private/index.html

书写新的配置文件，针对/var/www/myweb/private设置访问控制
[root@server0 ~]# vim /etc/httpd/conf/httpd.conf 
[root@server0 ~]# vim /etc/httpd/conf.d/nsd02.conf
 <Directory /var/www/myweb/private>
    Require ip 172.25.0.11   #仅允许本机172.25.0.11访问
 </Directory>
[root@server0 ~]#  systemctl restart httpd

虚拟机desktop0：访问测试
# firefox server0.example.com/private
Forbidden
You don't have permission to access /private/ on this server.

####################################################
案例4:使用自定Web根目录
调整 Web 站点 http://server0.example.com 的网页目录,
要求如下:
1)新建目录 /webroot,作为此站点新的网页目录
4)确保站点 http://server0.example.com 仍然可访问

虚拟机Server0
1.新建目录 /webroot,修改配置文件
# mkdir /webroot
# echo '<h1>wo shi webroot' > /webroot/index.html

# vim /etc/httpd/conf.d/nsd01.conf   #修改内容
 <VirtualHost *:80>
   ServerName  server0.example.com
   DocumentRoot  /webroot           #修改网页文件根目录
 </VirtualHost>

2.修改配置文件，实现访问控制 
# vim /etc/httpd/conf.d/nsd02.conf   #追加写入
 <Directory /webroot>
    Require  all  granted            #允许所有人访问
 </Directory>

[root@server0 ~]# systemctl restart httpd

3.SELinux安全上下文值（标签，标识文件或目录）
[root@server0 ~]# ls -Zd /var/www/      #查看目录的上下文值
[root@server0 ~]# ls -Zd /webroot/      #查看目录的上下文值

 ——以/var/www/为模版，修改/webroot的上下文值   -R：递归修改
[root@server0 ~]# chcon -R --reference=/var/www/  /webroot/

[root@server0 ~]# ls -Zd /webroot/      #查看目录的上下文值

虚拟机desktop：
[root@desktop0 ~]# firefox server0.example.com

#######################################################
部署动态网站

1.部署Python页面，放到webapp0.example.com的Documentroot目录
# cat /etc/httpd/conf.d/nsd01.conf

# cd /var/www/baidu/
# wget http://classroom.example.com/pub/materials/
webinfo.wsgi

# ls

2.方便客户端访问,网页跳转（网页访问路径别名）
[root@server0 /]# vim /etc/httpd/conf.d/nsd01.conf
  Alias 客户端网络路径   服务器实际原始路径

<VirtualHost *:80>
  ServerName webapp0.example.com
  DocumentRoot /var/www/baidu
  Alias   /    /var/www/baidu/webinfo.wsgi
   #客户端访问到 网页文件根目录时，将webinfo.wsgi页面呈现
</VirtualHost>

[root@server0 /]# systemctl restart httpd
 
客户端：访问测试查看Python页面
[root@desktop0 ~]# firefox  webapp0.example.com

3.翻译Python的Web页面内容
[root@server0 /]# yum -y install mod_wsgi  #解释Python程序
[root@server0 /]# vim /etc/httpd/conf.d/nsd01.conf
<VirtualHost *:80>
  ServerName webapp0.example.com
  DocumentRoot /var/www/baidu
  WsgiScriptAlias  /    /var/www/baidu/webinfo.wsgi

</VirtualHost>

[root@server0 /]# systemctl restart httpd

网页内容为：
  UINX时间戳：自1970-1-1 0时0分0秒算起，到现在时间所经历的秒数
客户端：访问测试查看Python页面
[root@desktop0 ~]# firefox  webapp0.example.com

4.此虚拟主机侦听在端口8909
[root@server0 /]# vim /etc/httpd/conf.d/nsd01.conf 
Listen 8909
<VirtualHost *:8909>
  ServerName  webapp0.example.com
  DocumentRoot  /var/www/baidu
  WsgiScriptAlias  /    /var/www/baidu/webinfo.wsgi
</VirtualHost>

5.SELinux非默认端口的开放

 # semanage port -l | grep http
 # semanage port  -a  -t  http_port_t  -p  tcp 8909
     -a:添加    -t：类型     -p：协议
 # semanage port -l | grep http
 # systemctl restart httpd

[root@desktop0 ~]# firefox webapp0.example.com:8909

########################################################
  端口优先级高于域名
  
#######################################################

















































































